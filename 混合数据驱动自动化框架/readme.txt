
把测试数据sheet中的所有数据取到一维列表中，
每一行数据使用字典来进行表示
data_dict = 
[
{"序号":1,"用户名":"testman1980","密码"："wulaoshi1978".........}
{"序号":2,"用户名":"testABC1001","密码"："test@ABC".........}
]

测试步骤中的数据：使用${xxx}来表示，例如 ${用户名}
使用正则把${用户名}里面的“用户名”取出来，然后data_dict["用户名"]
就可以取出用户名的数据。

然后把${用户名}替换为取出用户名的数据即可，例如${用户名}替换为了testman1980

convert_test_data_format 函数：把测试数据sheet的内容，从excel读取为
上面的data_dict格式。

execute_test_case_by_dir：参数是excel文件所在的目录，可以实现批量执行目录下的所有测试用例。这个方法中实际就是遍历所有的文件，然后分别传给
execute_test_case_by_file函数做参数，一个一个文件的执行测试用例

execute_test_case_by_file：参数是excel文件的绝对路径，执行这个文件中所有的用例。
本方法中：读取第一个测试用例的所有数据行，根据状态位判断哪些用例需要执行，过滤掉不需要执行的用例。
       分支1：如果用例需要执行，且数据sheet名称为空，则按照关键字用例执行。关键字用例执行调用函数：execute_test_case_by_sheet_name

       分支2：如果用例需要执行，且数据sheet名称有值，则按照混合用例执行。关键字用例执行调用函数：execute_test_case_by_hybrid
         1）读取所有的测试步骤
          2）读取所有的测试数据，并且使用convert_test_data_format 函数转换为字典的格式。
               遍历所有的测试步骤的关键字，如果包含了${xx},则使用正则从字典中取值进行替换，然后在执行测试步骤。并且把替换后的值更新到读取的二维列表中。
               如果关键字是Keyword，则说明要执行自定义的关键字sheet内容。
                此时调用的方法是：execute_test_case_by_test_step_and_data_dict
                这个方法的参数共3个：
                1）wb对象
                 2）测试步骤的sheet名称
                 3）一个字典对象，仅包含一行数据，然后替换到测试步骤中，依次执行即可。（此处有个局限，不能出现自定义关键字又包含其他自定义关键字的情况）


所有的测试步骤执行后，都会分别写入到excel结果中。

框架写的顺序是util--》config--->key_word--》main.py



